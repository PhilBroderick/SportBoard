@using Microsoft.AspNet.Identity
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
    @Html.AntiForgeryToken()

    <ul class="nav navbar-nav navbar-right">
        <li>
            <a id="profilePictureLink"href="@Url.Action("Index","Manage", routeValues: null)"><img src="@Url.Action("UserProfilePicture", "Manage")" class="profilePicture" /></a>
        </li>
        <li>
            @Html.ActionLink(User.Identity.GetUserName(), "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })
        </li>
        <li>
            <a id="unreadNotifications" href="@Url.Action("Index", "UserNotification")"></a>
        </li>
        <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
    </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}

@using (Html.BeginScriptContext())
{
    if (Request.IsAuthenticated)
    {

        Html.AddScriptBlock(

        @<script>
            var unreadNotificationCount = 0;

            function getUnreadNotifications() {
                $.ajax({
                    type: "GET",
                    url: "/api/notifications?userId=" + '@User.Identity.GetUserId()',
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        unreadNotificationCount = response.notificationCount;
                        $('#unreadNotifications').text(unreadNotificationCount);
                    },
                    error: function () {
                        alert("error");
                    }
                })
            }

            $(document).ready(function () {
                getUnreadNotifications();

            })
         </script>);
    }
}

        